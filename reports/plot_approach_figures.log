Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
func_dir = os.path.join(data_path, "sub-04570/func/")
data_files = [
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-1_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-2_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-3_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-4_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
]
echo_times = np.array([12.0, 28.0, 44.0, 60.0])

# Background anatomical image
xfm = os.path.join(
    func_dir, "sub-04570_task-rest_from-T1w_to-scanner_mode-image_xfm.txt"
)
xfm = nit.linear.load(xfm, fmt="itk")
t1_file = os.path.join(data_path, "sub-04570/anat/sub-04570_desc-preproc_T1w.nii.gz")
bg_img = xfm.apply(spatialimage=t1_file, reference=data_files[0])

# Tedana outputs
adaptive_mask_file = os.path.join(
    ted_dir, "sub-04570_task-rest_space-scanner_desc-adaptiveGoodSignal_mask.nii.gz"
)
mask = image.math_img("img >= 3", img=adaptive_mask_file)

# Optimally combined data
oc = masking.apply_mask(
    os.path.join(ted_dir, "sub-04570_task-rest_space-scanner_desc-optcom_bold.nii.gz"),
    mask,
)
oc_z = (oc - np.mean(oc, axis=0)) / np.std(oc, axis=0)

# Results from MEPCA
mepca_mmix = pd.read_table(
    os.path.join(ted_dir, "sub-04570_task-rest_space-scanner_desc-PCA_mixing.tsv"),
).values
oc_red = masking.apply_mask(
    os.path.join(
        ted_dir, "sub-04570_task-rest_space-scanner_desc-optcomPCAReduced_bold.nii.gz"
    ),
    mask,
)

# Results from MEICA
meica_mmix = pd.read_table(
    os.path.join(ted_dir, "sub-04570_task-rest_space-scanner_desc-ICA_mixing.tsv"),
).values
norm_weights = masking.apply_mask(
    os.path.join(
        ted_dir,
        "sub-04570_task-rest_space-scanner_desc-ICAAveragingWeights_components.nii.gz",
    ),
    mask,
)
meica_betas = np.dstack(
    (
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-1_desc-ICA_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-2_desc-ICA_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-3_desc-ICA_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-4_desc-ICA_components.nii.gz",
            ),
            mask,
        ).T,
    )
)
meica_betas = np.swapaxes(meica_betas, 1, 2)
r2_pred_betas = np.dstack(
    (
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-1_desc-ICAT2ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-2_desc-ICAT2ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-3_desc-ICAT2ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-4_desc-ICAT2ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
    )
)
r2_pred_betas = np.swapaxes(r2_pred_betas, 1, 2)
s0_pred_betas = np.dstack(
    (
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-1_desc-ICAS0ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-2_desc-ICAS0ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-3_desc-ICAS0ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
        masking.apply_mask(
            os.path.join(
                ted_dir,
                "sub-04570_task-rest_space-scanner_echo-4_desc-ICAS0ModelPredictions_components.nii.gz",
            ),
            mask,
        ).T,
    )
)
s0_pred_betas = np.swapaxes(s0_pred_betas, 1, 2)

# Component parameter estimates
betas_file = os.path.join(
    ted_dir, "sub-04570_task-rest_space-scanner_desc-ICA_components.nii.gz"
)
beta_maps = masking.apply_mask(betas_file, mask)

# Multi-echo denoised data
dn_data = masking.apply_mask(
    os.path.join(
        ted_dir, "sub-04570_task-rest_space-scanner_desc-optcomDenoised_bold.nii.gz"
    ),
    mask,
)
hk_data = masking.apply_mask(
    os.path.join(
        ted_dir, "sub-04570_task-rest_space-scanner_desc-optcomAccepted_bold.nii.gz"
    ),
    mask,
)

# Post-processed data
dn_t1c_data = masking.apply_mask(
    os.path.join(
        ted_dir, "sub-04570_task-rest_space-scanner_desc-optcomMIRDenoised_bold.nii.gz"
    ),
    mask,
)
hk_t1c_data = masking.apply_mask(
    os.path.join(
        ted_dir, "sub-04570_task-rest_space-scanner_desc-optcomAccepted_bold.nii.gz"
    ),
    mask,
)

# Component table
comp_tbl = pd.read_table(
    os.path.join(ted_dir, "sub-04570_task-rest_space-scanner_desc-tedana_metrics.tsv"),
    index_col="Component",
)

# Get voxel index for voxel most related to component with highest kappa value
acc_comp_tbl = comp_tbl.loc[comp_tbl["classification"] == "accepted"]
high_kappa_comp = acc_comp_tbl.sort_values(by="kappa", ascending=False).index.values[0]
high_kappa_comp_val = int(high_kappa_comp.split("_")[1])
voxel_idx = np.where(
    beta_maps[high_kappa_comp_val, :] == np.max(beta_maps[high_kappa_comp_val, :])
)[0][0]

rej_comp_tbl = comp_tbl.loc[comp_tbl["classification"] == "rejected"]
low_kappa_comp = rej_comp_tbl.sort_values(by="rho", ascending=False).index.values[0]

# load data
data = [masking.apply_mask(f, mask) for f in data_files]
ts = [d[:, voxel_idx] for d in data]
ts_1d = np.hstack(ts)

n_echoes = len(echo_times)
n_trs = data[0].shape[0]

pal = sns.color_palette("cubehelix", n_echoes)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[2], line 26[0m
[1;32m     22[0m [38;5;66;03m# Background anatomical image[39;00m
[1;32m     23[0m xfm [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mjoin(
[1;32m     24[0m     func_dir, [38;5;124m"[39m[38;5;124msub-04570_task-rest_from-T1w_to-scanner_mode-image_xfm.txt[39m[38;5;124m"[39m
[1;32m     25[0m )
[0;32m---> 26[0m xfm [38;5;241m=[39m [43mnit[49m[38;5;241;43m.[39;49m[43mlinear[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mxfm[49m[43m,[49m[43m [49m[43mfmt[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mitk[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     27[0m t1_file [38;5;241m=[39m os[38;5;241m.[39mpath[38;5;241m.[39mjoin(data_path, [38;5;124m"[39m[38;5;124msub-04570/anat/sub-04570_desc-preproc_T1w.nii.gz[39m[38;5;124m"[39m)
[1;32m     28[0m bg_img [38;5;241m=[39m xfm[38;5;241m.[39mapply(spatialimage[38;5;241m=[39mt1_file, reference[38;5;241m=[39mdata_files[[38;5;241m0[39m])

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nitransforms/linear.py:504[0m, in [0;36mload[0;34m(filename, fmt, reference, moving)[0m
[1;32m    489[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m(filename, fmt[38;5;241m=[39m[38;5;124m"[39m[38;5;124mX5[39m[38;5;124m"[39m, reference[38;5;241m=[39m[38;5;28;01mNone[39;00m, moving[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    490[0m     [38;5;124;03m"""[39;00m
[1;32m    491[0m [38;5;124;03m    Load a linear transform file.[39;00m
[1;32m    492[0m 
[0;32m   (...)[0m
[1;32m    502[0m 
[1;32m    503[0m [38;5;124;03m    """[39;00m
[0;32m--> 504[0m     xfm [38;5;241m=[39m [43mLinearTransformsMapping[49m[38;5;241;43m.[39;49m[43mfrom_filename[49m[43m([49m
[1;32m    505[0m [43m        [49m[43mfilename[49m[43m,[49m[43m [49m[43mfmt[49m[38;5;241;43m=[39;49m[43mfmt[49m[43m,[49m[43m [49m[43mreference[49m[38;5;241;43m=[39;49m[43mreference[49m[43m,[49m[43m [49m[43mmoving[49m[38;5;241;43m=[39;49m[43mmoving[49m
[1;32m    506[0m [43m    [49m[43m)[49m
[1;32m    507[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(xfm) [38;5;241m==[39m [38;5;241m1[39m:
[1;32m    508[0m         [38;5;28;01mreturn[39;00m xfm[[38;5;241m0[39m]

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nitransforms/linear.py:224[0m, in [0;36mAffine.from_filename[0;34m(cls, filename, fmt, reference, moving)[0m
[1;32m    221[0m [38;5;28;01melse[39;00m:
[1;32m    222[0m     [38;5;28;01mraise[39;00m [38;5;167;01mNotImplementedError[39;00m
[0;32m--> 224[0m struct [38;5;241m=[39m [43m_factory[49m[38;5;241;43m.[39;49m[43mfrom_filename[49m[43m([49m[43mfilename[49m[43m)[49m
[1;32m    225[0m matrix [38;5;241m=[39m struct[38;5;241m.[39mto_ras(reference[38;5;241m=[39mreference, moving[38;5;241m=[39mmoving)
[1;32m    226[0m [38;5;28;01mif[39;00m [38;5;28mcls[39m [38;5;241m==[39m Affine:

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nitransforms/io/itk.py:228[0m, in [0;36mITKLinearTransformArray.from_filename[0;34m(cls, filename)[0m
[1;32m    225[0m     [38;5;28;01mwith[39;00m [38;5;28mopen[39m([38;5;28mstr[39m(filename), [38;5;124m"[39m[38;5;124mrb[39m[38;5;124m"[39m) [38;5;28;01mas[39;00m f:
[1;32m    226[0m         [38;5;28;01mreturn[39;00m [38;5;28mcls[39m[38;5;241m.[39mfrom_binary(f)
[0;32m--> 228[0m [38;5;28;01mwith[39;00m [38;5;28;43mopen[39;49m[43m([49m[38;5;28;43mstr[39;49m[43m([49m[43mfilename[49m[43m)[49m[43m)[49m [38;5;28;01mas[39;00m f:
[1;32m    229[0m     string [38;5;241m=[39m f[38;5;241m.[39mread()
[1;32m    230[0m [38;5;28;01mreturn[39;00m [38;5;28mcls[39m[38;5;241m.[39mfrom_string(string)

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/data/sub-04570/func/sub-04570_task-rest_from-T1w_to-scanner_mode-image_xfm.txt'
FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/data/sub-04570/func/sub-04570_task-rest_from-T1w_to-scanner_mode-image_xfm.txt'

