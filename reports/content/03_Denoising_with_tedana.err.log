Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
workflows.tedana_workflow(
    data_files,
    echo_times,
    out_dir=out_dir,
    mask=mask_file,
    prefix="sub-04570_task-rest_space-scanner",
    fittype="curvefit",
    tedpca="mdl",
    verbose=True,
    gscontrol=["mir"],
)
------------------

----- stderr -----
INFO     tedana:tedana_workflow:488 Using output directory: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana
----- stderr -----
INFO     tedana:tedana_workflow:506 Initializing and validating component selection tree
----- stderr -----
WARNING  component_selector:validate_tree:127 Decision tree includes fields that are not used or logged {'_comment'}
----- stderr -----
INFO     component_selector:__init__:250 Performing component selection with tedana_orig_decision_tree
----- stderr -----
INFO     component_selector:__init__:251 Very similar to the decision tree designed by Prantik Kundu
----- stderr -----
INFO     tedana:tedana_workflow:509 Loading input data: ['/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/func/sub-04570_task-rest_echo-1_space-scanner_desc-partialPreproc_bold.nii.gz', '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/func/sub-04570_task-rest_echo-2_space-scanner_desc-partialPreproc_bold.nii.gz', '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/func/sub-04570_task-rest_echo-3_space-scanner_desc-partialPreproc_bold.nii.gz', '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/func/sub-04570_task-rest_echo-4_space-scanner_desc-partialPreproc_bold.nii.gz']
----- stderr -----
INFO     io:__init__:155 Generating figures directory: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/figures
----- stderr -----
INFO     tedana:tedana_workflow:572 Using user-defined mask
----- stderr -----
INFO     tedana:tedana_workflow:620 Computing T2* map
----- stderr -----
INFO     combine:make_optcom:192 Optimally combining data with voxel-wise T2* estimates
----- stderr -----
INFO     tedana:tedana_workflow:645 Writing optimally combined data set: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-optcom_bold.nii.gz
----- stderr -----
INFO     pca:tedpca:203 Computing PCA of optimally combined multi-echo data with selection criteria: mdl
----- stderr -----
INFO     pca:tedpca:243 Optimal number of components based on different criteria:
----- stderr -----
INFO     pca:tedpca:244 AIC: 81 | KIC: 71 | MDL: 46 | 90% varexp: 142 | 95% varexp: 187
----- stderr -----
INFO     pca:tedpca:249 Explained variance based on different criteria:
----- stderr -----
INFO     pca:tedpca:250 AIC: 0.821% | KIC: 0.806% | MDL: 0.762% | 90% varexp: 0.9% | 95% varexp: 0.95%
----- stderr -----
INFO     pca:tedpca:267 Plotting maPCA optimization curves
----- stderr -----
INFO     collect:generate_metrics:121 Calculating weight maps
----- stderr -----
INFO     collect:generate_metrics:130 Calculating parameter estimate maps for optimally combined data
----- stderr -----
INFO     collect:generate_metrics:143 Calculating z-statistic maps
----- stderr -----
INFO     collect:generate_metrics:153 Calculating F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:173 Thresholding z-statistic maps
----- stderr -----
INFO     collect:generate_metrics:180 Calculating T2* F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:187 Calculating S0 F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:195 Counting significant voxels in T2* F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:201 Counting significant voxels in S0 F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:208 Thresholding optimal combination beta maps to match T2* F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:214 Thresholding optimal combination beta maps to match S0 F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:221 Calculating kappa and rho
----- stderr -----
INFO     collect:generate_metrics:230 Calculating variance explained
----- stderr -----
INFO     collect:generate_metrics:236 Calculating normalized variance explained
----- stderr -----
INFO     collect:generate_metrics:243 Calculating DSI between thresholded T2* F-statistic and optimal combination beta maps
----- stderr -----
INFO     collect:generate_metrics:254 Calculating DSI between thresholded S0 F-statistic and optimal combination beta maps
----- stderr -----
INFO     collect:generate_metrics:265 Calculating signal-noise t-statistics
----- stderr -----
INFO     collect:generate_metrics:303 Counting significant noise voxels from z-statistic maps
----- stderr -----
INFO     collect:generate_metrics:314 Calculating decision table score
----- stderr -----
INFO     pca:tedpca:397 Selected 46 components with 76.18% normalized variance explained using mdl dimensionality estimate
----- stderr -----
INFO     ica:tedica:80 ICA with random seed 42 converged in 91 iterations
----- stderr -----
INFO     collect:generate_metrics:121 Calculating weight maps
----- stderr -----
INFO     collect:generate_metrics:130 Calculating parameter estimate maps for optimally combined data
----- stderr -----
INFO     collect:generate_metrics:143 Calculating z-statistic maps
----- stderr -----
INFO     collect:generate_metrics:153 Calculating F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:173 Thresholding z-statistic maps
----- stderr -----
INFO     collect:generate_metrics:180 Calculating T2* F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:187 Calculating S0 F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:195 Counting significant voxels in T2* F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:201 Counting significant voxels in S0 F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:208 Thresholding optimal combination beta maps to match T2* F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:214 Thresholding optimal combination beta maps to match S0 F-statistic maps
----- stderr -----
INFO     collect:generate_metrics:221 Calculating kappa and rho
----- stderr -----
INFO     collect:generate_metrics:230 Calculating variance explained
----- stderr -----
INFO     collect:generate_metrics:236 Calculating normalized variance explained
----- stderr -----
INFO     collect:generate_metrics:243 Calculating DSI between thresholded T2* F-statistic and optimal combination beta maps
----- stderr -----
INFO     collect:generate_metrics:254 Calculating DSI between thresholded S0 F-statistic and optimal combination beta maps
----- stderr -----
INFO     collect:generate_metrics:265 Calculating signal-noise t-statistics
----- stderr -----
INFO     collect:generate_metrics:303 Counting significant noise voxels from z-statistic maps
----- stderr -----
INFO     collect:generate_metrics:314 Calculating decision table score
----- stderr -----
INFO     tedana:tedana_workflow:694 Selecting components from ICA results
----- stderr -----
INFO     tedica:automatic_selection:55 Performing ICA component selection
----- stderr -----
INFO     selection_nodes:manual_classify:104 Step 0: manual_classify: Set all to unclassified
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 0: manual_classify applied to 46 components. 46 True -> unclassified. 0 False -> nochange.
----- stderr -----
INFO     selection_nodes:manual_classify:136 Step 0: manual_classify component classification tags are cleared
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 0: Total component classifications: 46 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 1: left_op_right: rejected if rho>kappa, else nochange
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 1: left_op_right applied to 46 components. 18 True -> rejected. 28 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 1: Total component classifications: 18 rejected, 28 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 2: left_op_right: rejected if ['countsigFS0>countsigFT2 & countsigFT2>0'], else nochange
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 2: left_op_right applied to 46 components. 19 True -> rejected. 27 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 2: Total component classifications: 22 rejected, 24 unclassified
----- stderr -----
INFO     selection_nodes:calc_median:653 Step 3: calc_median: Median(median_varex)
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 3: calc_median calculated: median_varex=0.544933448507172
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 3: Total component classifications: 22 rejected, 24 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 4: left_op_right: rejected if ['dice_FS0>dice_FT2 & variance explained>0.54'], else nochange
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 4: left_op_right applied to 46 components. 6 True -> rejected. 40 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 4: Total component classifications: 22 rejected, 24 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 5: left_op_right: rejected if ['0>signal-noise_t & variance explained>0.54'], else nochange
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 5: left_op_right applied to 46 components. 9 True -> rejected. 37 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 5: Total component classifications: 26 rejected, 20 unclassified
----- stderr -----
INFO     selection_nodes:calc_kappa_elbow:757 Step 6: calc_kappa_elbow: Calc Kappa Elbow
----- stderr -----
INFO     selection_utils:kappa_elbow_kundu:621 Calculating kappa elbow based on min of all and nonsig components.
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 6: calc_kappa_elbow calculated: kappa_elbow_kundu=21.277964952353926, kappa_allcomps_elbow=40.1214389679341, kappa_nonsig_elbow=21.277964952353926, varex_upper_p=0.7802353000706737
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 6: Total component classifications: 26 rejected, 20 unclassified
----- stderr -----
INFO     selection_nodes:dec_reclassify_high_var_comps:1120 Step 7: reclassify_high_var_comps: Change unclassified to unclass_highvar for the top couple of components with the highest jumps in variance
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 7: reclassify_high_var_comps applied to 20 components. 2 True -> unclass_highvar. 18 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 7: Total component classifications: 26 rejected, 2 unclass_highvar, 18 unclassified
----- stderr -----
INFO     selection_nodes:calc_rho_elbow:882 Step 8: calc_rho_elbow: Calc Rho Elbow
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 8: calc_rho_elbow calculated: rho_elbow_kundu=17.939325466584197, rho_allcomps_elbow=27.779814570576402, rho_unclassified_elbow=15.91019734316226, elbow_f05=10.127964486013928
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 8: Total component classifications: 26 rejected, 2 unclass_highvar, 18 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 9: left_op_right: provisionalaccept if kappa>=21.28, else nochange
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 9: left_op_right applied to 18 components. 12 True -> provisionalaccept. 6 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 9: Total component classifications: 12 provisionalaccept, 26 rejected, 2 unclass_highvar, 6 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 10: left_op_right: unclassified if rho>17.94, else nochange
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 10: left_op_right applied to 12 components. 3 True -> unclassified. 9 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 10: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_nodes:dec_classification_doesnt_exist:1009 Step 11: classification_doesnt_exist: Change ['provisionalaccept', 'unclassified', 'unclass_highvar'] to accepted if less than 2 components with provisionalaccept exist
----- stderr -----
INFO     selection_nodes:dec_classification_doesnt_exist:1011 Step 11: classification_doesnt_exist If nothing is provisionally accepted by this point, then rerun ICA & selection. If max iterations of rerunning done, then accept everything not already rejected
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 11: classification_doesnt_exist applied to 20 components. None True -> 0. None False -> 20.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 11: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_nodes:calc_varex_thresh:1308 Step 12: calc_varex_thresh: Calc varex_upper_thresh, 90th percentile threshold
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 12: calc_varex_thresh calculated: varex_upper_thresh=0.8908095307208379, upper_perc=90
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 12: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_nodes:calc_varex_thresh:1308 Step 13: calc_varex_thresh: Calc varex_lower_thresh, 25th percentile threshold
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 13: calc_varex_thresh calculated: varex_lower_thresh=0.32109341064131836, lower_perc=25
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 13: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_utils:get_extend_factor:798 extend_factor=2.0, based on number of fMRI volumes
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 14: calc_extend_factor calculated: extend_factor=2.0
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 14: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 15: calc_max_good_meanmetricrank calculated: max_good_meanmetricrank=18.0
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 15: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 16: calc_varex_kappa_ratio calculated: kappa_rate=75.59581211808485
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 16: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 17: left_op_right: rejected if ['d_table_score>18.0 & variance explained>2.0*0.89'], else nochange
----- stderr -----
INFO     selection_nodes:dec_left_op_right:391 Step 17: left_op_right If variance and d_table_scores are high, then reject
----- stderr -----
INFO     selection_utils:comptable_classification_changer:277 Step 17: No components fit criterion True to change classification
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 17: left_op_right applied to 20 components. 0 True -> rejected. 20 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 17: Total component classifications: 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 9 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 18: left_op_right: accepted if ['d_table_score>18.0 & variance explained<=0.32 & kappa<=21.28'], else nochange
----- stderr -----
INFO     selection_nodes:dec_left_op_right:391 Step 18: left_op_right If low variance, accept even if bad kappa & d_table_scores
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 18: left_op_right applied to 20 components. 5 True -> accepted. 15 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 18: Total component classifications: 5 accepted, 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 4 unclassified
----- stderr -----
INFO     selection_nodes:dec_classification_doesnt_exist:1009 Step 19: classification_doesnt_exist: Change ['provisionalaccept', 'unclassified', 'unclass_highvar'] to accepted if ['unclassified', 'unclass_highvar'] doesn't exist
----- stderr -----
INFO     selection_nodes:dec_classification_doesnt_exist:1011 Step 19: classification_doesnt_exist If nothing left is unclassified, then accept all
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 19: classification_doesnt_exist applied to 15 components. None True -> 0. None False -> 15.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 19: Total component classifications: 5 accepted, 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 4 unclassified
----- stderr -----
INFO     selection_nodes:calc_revised_meanmetricrank_guesses:1768 Step 20: calc_revised_meanmetricrank_guesses: Calc revised d_table_score & num accepted component guesses
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 20: calc_revised_meanmetricrank_guesses calculated: num_acc_guess=11, conservative_guess=5.5, restrict_factor=2
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 20: Total component classifications: 5 accepted, 9 provisionalaccept, 26 rejected, 2 unclass_highvar, 4 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 21: left_op_right: rejected if ['d_table_score_node20>5.5 & varex kappa ratio>2*2.0 & variance explained>2.0*0.89'], else nochange
----- stderr -----
INFO     selection_nodes:dec_left_op_right:391 Step 21: left_op_right Reject if a combination of kappa, variance, and other factors are ranked worse than others
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 21: left_op_right applied to 15 components. 2 True -> rejected. 13 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 21: Total component classifications: 5 accepted, 9 provisionalaccept, 28 rejected, 4 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 22: left_op_right: rejected if ['d_table_score_node20>0.9*11 & variance explained>2.0*0.32'], else nochange
----- stderr -----
INFO     selection_nodes:dec_left_op_right:391 Step 22: left_op_right Reject if a combination of variance and ranks of other metrics are worse than others
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 22: left_op_right applied to 13 components. 2 True -> rejected. 11 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 22: Total component classifications: 5 accepted, 9 provisionalaccept, 30 rejected, 2 unclassified
----- stderr -----
INFO     selection_nodes:calc_varex_thresh:1308 Step 23: calc_varex_thresh: Calc varex_new_lower_thresh, 25th percentile threshold
----- stderr -----
INFO     selection_utils:log_decision_tree_step:418 Step 23: calc_varex_thresh calculated: varex_new_lower_thresh=0.3375094883119395, new_lower_perc=25
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 23: Total component classifications: 5 accepted, 9 provisionalaccept, 30 rejected, 2 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 24: left_op_right: accepted if ['d_table_score_node20>11 & variance explained>0.34'], else nochange
----- stderr -----
INFO     selection_nodes:dec_left_op_right:391 Step 24: left_op_right Accept components with a bad d_table_score, but are at the higher end of the remaining variance so more cautious to not remove
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 24: left_op_right applied to 11 components. 1 True -> accepted. 10 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 24: Total component classifications: 6 accepted, 9 provisionalaccept, 30 rejected, 1 unclassified
----- stderr -----
INFO     selection_nodes:dec_left_op_right:389 Step 25: left_op_right: accepted if ['kappa<=21.28 & variance explained>0.34'], else nochange
----- stderr -----
INFO     selection_nodes:dec_left_op_right:391 Step 25: left_op_right For not already rejected components, accept ones below the kappa elbow, but at the higher end of the remaining variance so more cautious to not remove
----- stderr -----
INFO     selection_utils:comptable_classification_changer:277 Step 25: No components fit criterion True to change classification
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 25: left_op_right applied to 10 components. 0 True -> accepted. 10 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 25: Total component classifications: 6 accepted, 9 provisionalaccept, 30 rejected, 1 unclassified
----- stderr -----
INFO     selection_nodes:manual_classify:104 Step 26: manual_classify: Set ['provisionalaccept', 'unclassified', 'unclass_highvar'] to accepted
----- stderr -----
INFO     selection_nodes:manual_classify:106 Step 26: manual_classify Anything still provisional (accepted or rejected) or unclassified should be accepted
----- stderr -----
INFO     selection_utils:log_decision_tree_step:406 Step 26: manual_classify applied to 10 components. 10 True -> accepted. 0 False -> nochange.
----- stderr -----
INFO     selection_utils:log_classification_counts:451 Step 26: Total component classifications: 16 accepted, 30 rejected
----- stderr -----
INFO     io:denoise_ts:527 Variance explained by decomposition: 92.18%
----- stderr -----
INFO     io:write_split_ts:599 Writing high-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-optcomAccepted_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:607 Writing low-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-optcomRejected_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:614 Writing denoised time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-denoised_bold.nii.gz
----- stderr -----
INFO     io:writeresults:663 Writing full ICA coefficient feature set: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-ICA_components.nii.gz
----- stderr -----
INFO     io:writeresults:667 Writing denoised ICA coefficient feature set: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-ICAAccepted_components.nii.gz
----- stderr -----
INFO     io:writeresults:673 Writing Z-normalized spatial component maps: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_desc-ICAAccepted_stat-z_components.nii.gz
----- stderr -----
INFO     gscontrol:minimum_image_regression:167 Performing minimum image regression to remove spatially-diffuse noise
----- stderr -----
INFO     io:writeresults_echoes:713 Writing Kappa-filtered echo #1 timeseries
----- stderr -----
INFO     io:denoise_ts:527 Variance explained by decomposition: 84.08%
----- stderr -----
INFO     io:write_split_ts:596 Writing high-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-1_desc-Accepted_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:604 Writing low-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-1_desc-Rejected_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:614 Writing denoised time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-1_desc-Denoised_bold.nii.gz
----- stderr -----
INFO     io:writeresults_echoes:713 Writing Kappa-filtered echo #2 timeseries
----- stderr -----
INFO     io:denoise_ts:527 Variance explained by decomposition: 85.17%
----- stderr -----
INFO     io:write_split_ts:596 Writing high-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-2_desc-Accepted_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:604 Writing low-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-2_desc-Rejected_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:614 Writing denoised time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-2_desc-Denoised_bold.nii.gz
----- stderr -----
INFO     io:writeresults_echoes:713 Writing Kappa-filtered echo #3 timeseries
----- stderr -----
INFO     io:denoise_ts:527 Variance explained by decomposition: 85.59%
----- stderr -----
INFO     io:write_split_ts:596 Writing high-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-3_desc-Accepted_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:604 Writing low-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-3_desc-Rejected_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:614 Writing denoised time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-3_desc-Denoised_bold.nii.gz
----- stderr -----
INFO     io:writeresults_echoes:713 Writing Kappa-filtered echo #4 timeseries
----- stderr -----
INFO     io:denoise_ts:527 Variance explained by decomposition: 85.47%
----- stderr -----
INFO     io:write_split_ts:596 Writing high-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-4_desc-Accepted_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:604 Writing low-Kappa time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-4_desc-Rejected_bold.nii.gz
----- stderr -----
INFO     io:write_split_ts:614 Writing denoised time series: /home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/tedana/sub-04570_task-rest_space-scanner_echo-4_desc-Denoised_bold.nii.gz
----- stderr -----
INFO     tedana:tedana_workflow:885 Making figures folder with static component maps and timecourse plots.
----- stderr -----
INFO     io:denoise_ts:527 Variance explained by decomposition: 92.18%
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m [43mworkflows[49m[38;5;241;43m.[39;49m[43mtedana_workflow[49m[43m([49m
[1;32m      2[0m [43m    [49m[43mdata_files[49m[43m,[49m
[1;32m      3[0m [43m    [49m[43mecho_times[49m[43m,[49m
[1;32m      4[0m [43m    [49m[43mout_dir[49m[38;5;241;43m=[39;49m[43mout_dir[49m[43m,[49m
[1;32m      5[0m [43m    [49m[43mmask[49m[38;5;241;43m=[39;49m[43mmask_file[49m[43m,[49m
[1;32m      6[0m [43m    [49m[43mprefix[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43msub-04570_task-rest_space-scanner[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      7[0m [43m    [49m[43mfittype[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mcurvefit[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      8[0m [43m    [49m[43mtedpca[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mmdl[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      9[0m [43m    [49m[43mverbose[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m     10[0m [43m    [49m[43mgscontrol[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mmir[39;49m[38;5;124;43m"[39;49m[43m][49m[43m,[49m
[1;32m     11[0m [43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tedana/workflows/tedana.py:906[0m, in [0;36mtedana_workflow[0;34m(data, tes, out_dir, mask, convention, prefix, fittype, combmode, tree, tedpca, fixed_seed, maxit, maxrestart, tedort, gscontrol, no_reports, png_cmap, verbose, low_mem, debug, quiet, overwrite, t2smap, mixm, tedana_command)[0m
[1;32m    889[0m reporting[38;5;241m.[39mstatic_figures[38;5;241m.[39mcarpet_plot(
[1;32m    890[0m     optcom_ts[38;5;241m=[39mdata_oc,
[1;32m    891[0m     denoised_ts[38;5;241m=[39mdn_ts,
[0;32m   (...)[0m
[1;32m    896[0m     gscontrol[38;5;241m=[39mgscontrol,
[1;32m    897[0m )
[1;32m    898[0m reporting[38;5;241m.[39mstatic_figures[38;5;241m.[39mcomp_figures(
[1;32m    899[0m     data_oc,
[1;32m    900[0m     mask[38;5;241m=[39mmask_denoise,
[0;32m   (...)[0m
[1;32m    904[0m     png_cmap[38;5;241m=[39mpng_cmap,
[1;32m    905[0m )
[0;32m--> 906[0m [43mreporting[49m[38;5;241;43m.[39;49m[43mstatic_figures[49m[38;5;241;43m.[39;49m[43mplot_t2star_and_s0[49m[43m([49m[43mio_generator[49m[38;5;241;43m=[39;49m[43mio_generator[49m[43m,[49m[43m [49m[43mmask[49m[38;5;241;43m=[39;49m[43mmask_denoise[49m[43m)[49m
[1;32m    908[0m LGR[38;5;241m.[39minfo([38;5;124m"[39m[38;5;124mGenerating dynamic report[39m[38;5;124m"[39m)
[1;32m    909[0m reporting[38;5;241m.[39mgenerate_report(io_generator)

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tedana/reporting/static_figures.py:593[0m, in [0;36mplot_t2star_and_s0[0;34m(io_generator, mask)[0m
[1;32m    591[0m [38;5;66;03m# Plot T2* and S0 maps[39;00m
[1;32m    592[0m t2star_plot [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mio_generator[38;5;241m.[39mprefix[38;5;132;01m}[39;00m[38;5;124mt2star_brain.svg[39m[38;5;124m"[39m
[0;32m--> 593[0m [43mplotting[49m[38;5;241;43m.[39;49m[43mplot_stat_map[49m[43m([49m
[1;32m    594[0m [43m    [49m[43mt2star_img[49m[43m,[49m
[1;32m    595[0m [43m    [49m[43mbg_img[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[1;32m    596[0m [43m    [49m[43mdisplay_mode[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mmosaic[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    597[0m [43m    [49m[43msymmetric_cbar[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    598[0m [43m    [49m[43mblack_bg[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m
[1;32m    599[0m [43m    [49m[43mcmap[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mgray[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m    600[0m [43m    [49m[43mvmin[49m[38;5;241;43m=[39;49m[43mt2s_p02[49m[43m,[49m
[1;32m    601[0m [43m    [49m[43mvmax[49m[38;5;241;43m=[39;49m[43mt2s_p98[49m[43m,[49m
[1;32m    602[0m [43m    [49m[43mannotate[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    603[0m [43m    [49m[43moutput_file[49m[38;5;241;43m=[39;49m[43mos[49m[38;5;241;43m.[39;49m[43mpath[49m[38;5;241;43m.[39;49m[43mjoin[49m[43m([49m[43mio_generator[49m[38;5;241;43m.[39;49m[43mout_dir[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mfigures[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mt2star_plot[49m[43m)[49m[43m,[49m
[1;32m    604[0m [43m[49m[43m)[49m
[1;32m    606[0m s0_plot [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mio_generator[38;5;241m.[39mprefix[38;5;132;01m}[39;00m[38;5;124ms0_brain.svg[39m[38;5;124m"[39m
[1;32m    607[0m plotting[38;5;241m.[39mplot_stat_map(
[1;32m    608[0m     s0_img,
[1;32m    609[0m     bg_img[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m    617[0m     output_file[38;5;241m=[39mos[38;5;241m.[39mpath[38;5;241m.[39mjoin(io_generator[38;5;241m.[39mout_dir, [38;5;124m"[39m[38;5;124mfigures[39m[38;5;124m"[39m, s0_plot),
[1;32m    618[0m )

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nilearn/plotting/img_plotting.py:934[0m, in [0;36mplot_stat_map[0;34m(stat_map_img, bg_img, cut_coords, output_file, display_mode, colorbar, cbar_tick_format, figure, axes, title, threshold, annotate, draw_cross, black_bg, cmap, symmetric_cbar, dim, vmax, resampling_interpolation, **kwargs)[0m
[1;32m    929[0m bg_img, black_bg, bg_vmin, bg_vmax [38;5;241m=[39m _load_anat(bg_img, dim[38;5;241m=[39mdim,
[1;32m    930[0m                                                 black_bg[38;5;241m=[39mblack_bg)
[1;32m    932[0m stat_map_img [38;5;241m=[39m _utils[38;5;241m.[39mcheck_niimg_3d(stat_map_img, dtype[38;5;241m=[39m[38;5;124m'[39m[38;5;124mauto[39m[38;5;124m'[39m)
[0;32m--> 934[0m cbar_vmin, cbar_vmax, vmin, vmax [38;5;241m=[39m [43m_get_colorbar_and_data_ranges[49m[43m([49m
[1;32m    935[0m [43m    [49m[43m_safe_get_data[49m[43m([49m[43mstat_map_img[49m[43m,[49m[43m [49m[43mensure_finite[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m[43m,[49m
[1;32m    936[0m [43m    [49m[43mvmax[49m[43m,[49m
[1;32m    937[0m [43m    [49m[43msymmetric_cbar[49m[43m,[49m
[1;32m    938[0m [43m    [49m[43mkwargs[49m[43m)[49m
[1;32m    940[0m display [38;5;241m=[39m _plot_img_with_bg(
[1;32m    941[0m     img[38;5;241m=[39mstat_map_img, bg_img[38;5;241m=[39mbg_img, cut_coords[38;5;241m=[39mcut_coords,
[1;32m    942[0m     output_file[38;5;241m=[39moutput_file, display_mode[38;5;241m=[39mdisplay_mode,
[0;32m   (...)[0m
[1;32m    947[0m     cbar_vmin[38;5;241m=[39mcbar_vmin, cbar_vmax[38;5;241m=[39mcbar_vmax,
[1;32m    948[0m     resampling_interpolation[38;5;241m=[39mresampling_interpolation, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    950[0m [38;5;28;01mreturn[39;00m display

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nilearn/plotting/img_plotting.py:76[0m, in [0;36m_get_colorbar_and_data_ranges[0;34m(stat_map_data, vmax, symmetric_cbar, kwargs, force_min_stat_map_value)[0m
[1;32m     66[0m [38;5;250m[39m[38;5;124;03m"""Internal function for setting colormap and colorbar limits.[39;00m
[1;32m     67[0m 
[1;32m     68[0m [38;5;124;03mUsed by for plot_stat_map and plot_glass_brain.[39;00m
[0;32m   (...)[0m
[1;32m     73[0m 
[1;32m     74[0m [38;5;124;03m"""[39;00m
[1;32m     75[0m [38;5;28;01mif[39;00m [38;5;124m'[39m[38;5;124mvmin[39m[38;5;124m'[39m [38;5;129;01min[39;00m kwargs:
[0;32m---> 76[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mthis function does not accept a [39m[38;5;124m"[39m[38;5;124mvmin[39m[38;5;124m"[39m[38;5;124m [39m[38;5;124m'[39m
[1;32m     77[0m                      [38;5;124m'[39m[38;5;124margument, as it uses a symmetrical range [39m[38;5;124m'[39m
[1;32m     78[0m                      [38;5;124m'[39m[38;5;124mdefined via the vmax argument. To threshold [39m[38;5;124m'[39m
[1;32m     79[0m                      [38;5;124m'[39m[38;5;124mthe plotted map, use the [39m[38;5;124m"[39m[38;5;124mthreshold[39m[38;5;124m"[39m[38;5;124m argument[39m[38;5;124m'[39m)
[1;32m     81[0m [38;5;66;03m# make sure that the color range is symmetrical[39;00m
[1;32m     82[0m [38;5;28;01mif[39;00m vmax [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mor[39;00m symmetric_cbar [38;5;129;01min[39;00m [[38;5;124m'[39m[38;5;124mauto[39m[38;5;124m'[39m, [38;5;28;01mFalse[39;00m]:
[1;32m     83[0m     [38;5;66;03m# Avoid dealing with masked_array:[39;00m

[0;31mValueError[0m: this function does not accept a "vmin" argument, as it uses a symmetrical range defined via the vmax argument. To threshold the plotted map, use the "threshold" argument

