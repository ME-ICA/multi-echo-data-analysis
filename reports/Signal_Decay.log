Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
func_dir = os.path.join(data_path, "sub-04570/func/")
data_files = [
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-1_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-2_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-3_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
    os.path.join(
        func_dir,
        "sub-04570_task-rest_echo-4_space-scanner_desc-partialPreproc_bold.nii.gz",
    ),
]
ted_dir = os.path.join(data_path, "tedana")
ECHO_TIMES = [12, 28, 44, 60]
n_echoes = len(ECHO_TIMES)

pal = sns.color_palette("cubehelix", n_echoes)

img = image.index_img(data_files[0], 0)
data = img.get_fdata()
vmax = np.max(data)
idx = np.vstack(np.where(data > 1000))

min_x, min_y, min_z = np.min(idx, axis=1)
max_x, max_y, max_z = np.max(idx, axis=1)

imgs = []
for f in data_files:
    img = image.index_img(f, 0)
    data = img.get_fdata()
    data = data[min_x:max_x, min_y:max_y, min_z:max_z]
    img = nib.Nifti1Image(data, img.affine, img.header)
    imgs.append(img)

# Create binary mask from adaptive mask
adaptive_mask_file = os.path.join(
    ted_dir, "sub-04570_task-rest_space-scanner_desc-adaptiveGoodSignal_mask.nii.gz"
)
mask = image.math_img("img >= 3", img=adaptive_mask_file)

# Component parameter estimates
betas_file = os.path.join(
    ted_dir, "sub-04570_task-rest_space-scanner_desc-ICA_components.nii.gz"
)
beta_maps = masking.apply_mask(betas_file, mask)

# Component table
comp_tbl = pd.read_table(
    os.path.join(ted_dir, "sub-04570_task-rest_space-scanner_desc-tedana_metrics.tsv"),
    index_col="Component",
)

# Get voxel index for voxel most related to component with highest kappa value
acc_comp_tbl = comp_tbl.loc[comp_tbl["classification"] == "accepted"]
high_kappa_comp = acc_comp_tbl.sort_values(by="kappa", ascending=False).index.values[0]
high_kappa_comp_val = int(high_kappa_comp.split("_")[1])
voxel_idx = np.where(
    beta_maps[high_kappa_comp_val, :] == np.max(beta_maps[high_kappa_comp_val, :])
)[0][0]

# Extract the time series for the high-kappa voxel
data = [masking.apply_mask(f, mask) for f in data_files]
ts = [d[:, voxel_idx] for d in data]
ts_1d = np.hstack(ts)

n_trs = ts[0].shape[0]
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[2], line 26[0m
[1;32m     22[0m n_echoes [38;5;241m=[39m [38;5;28mlen[39m(ECHO_TIMES)
[1;32m     24[0m pal [38;5;241m=[39m sns[38;5;241m.[39mcolor_palette([38;5;124m"[39m[38;5;124mcubehelix[39m[38;5;124m"[39m, n_echoes)
[0;32m---> 26[0m img [38;5;241m=[39m [43mimage[49m[38;5;241;43m.[39;49m[43mindex_img[49m[43m([49m[43mdata_files[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[38;5;241;43m0[39;49m[43m)[49m
[1;32m     27[0m data [38;5;241m=[39m img[38;5;241m.[39mget_fdata()
[1;32m     28[0m vmax [38;5;241m=[39m np[38;5;241m.[39mmax(data)

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nilearn/image/image.py:652[0m, in [0;36mindex_img[0;34m(imgs, index)[0m
[1;32m    599[0m [38;5;28;01mdef[39;00m [38;5;21mindex_img[39m(imgs, index):
[1;32m    600[0m     [38;5;124;03m"""Indexes into a 4D Niimg-like object in the fourth dimension.[39;00m
[1;32m    601[0m 
[1;32m    602[0m [38;5;124;03m    Common use cases include extracting a 3D image out of `img` or[39;00m
[0;32m   (...)[0m
[1;32m    650[0m 
[1;32m    651[0m [38;5;124;03m    """[39;00m
[0;32m--> 652[0m     imgs [38;5;241m=[39m [43mcheck_niimg_4d[49m[43m([49m[43mimgs[49m[43m)[49m
[1;32m    653[0m     [38;5;66;03m# duck-type for pandas arrays, and select the 'values' attr[39;00m
[1;32m    654[0m     [38;5;28;01mif[39;00m [38;5;28mhasattr[39m(index, [38;5;124m'[39m[38;5;124mvalues[39m[38;5;124m'[39m) [38;5;129;01mand[39;00m [38;5;28mhasattr[39m(index, [38;5;124m'[39m[38;5;124miloc[39m[38;5;124m'[39m):

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nilearn/_utils/niimg_conversions.py:379[0m, in [0;36mcheck_niimg_4d[0;34m(niimg, return_iterator, dtype)[0m
[1;32m    341[0m [38;5;28;01mdef[39;00m [38;5;21mcheck_niimg_4d[39m(niimg, return_iterator[38;5;241m=[39m[38;5;28;01mFalse[39;00m, dtype[38;5;241m=[39m[38;5;28;01mNone[39;00m):
[1;32m    342[0m     [38;5;124;03m"""Check that niimg is a proper 4D niimg-like object and load it.[39;00m
[1;32m    343[0m 
[1;32m    344[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    377[0m 
[1;32m    378[0m [38;5;124;03m    """[39;00m
[0;32m--> 379[0m     [38;5;28;01mreturn[39;00m [43mcheck_niimg[49m[43m([49m[43mniimg[49m[43m,[49m[43m [49m[43mensure_ndim[49m[38;5;241;43m=[39;49m[38;5;241;43m4[39;49m[43m,[49m[43m [49m[43mreturn_iterator[49m[38;5;241;43m=[39;49m[43mreturn_iterator[49m[43m,[49m
[1;32m    380[0m [43m                       [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m

File [0;32m/opt/hostedtoolcache/Python/3.8.14/x64/lib/python3.8/site-packages/nilearn/_utils/niimg_conversions.py:271[0m, in [0;36mcheck_niimg[0;34m(niimg, ensure_ndim, atleast_4d, dtype, return_iterator, wildcards)[0m
[1;32m    269[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(message)
[1;32m    270[0m     [38;5;28;01melse[39;00m:
[0;32m--> 271[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mFile not found: [39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m"[39m [38;5;241m%[39m niimg)
[1;32m    272[0m [38;5;28;01melif[39;00m [38;5;129;01mnot[39;00m os[38;5;241m.[39mpath[38;5;241m.[39mexists(niimg):
[1;32m    273[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mFile not found: [39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m"[39m [38;5;241m%[39m niimg)

[0;31mValueError[0m: File not found: '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/data/sub-04570/func/sub-04570_task-rest_echo-1_space-scanner_desc-partialPreproc_bold.nii.gz'
ValueError: File not found: '/home/runner/work/multi-echo-data-analysis/multi-echo-data-analysis/data/multi-echo-data-analysis/data/sub-04570/func/sub-04570_task-rest_echo-1_space-scanner_desc-partialPreproc_bold.nii.gz'

